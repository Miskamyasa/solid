---
root: true
env:
  browser: true
  node: true

parser: "@typescript-eslint/parser"
parserOptions:
  sourceType: module
  ecmaFeatures:
    jsx: true
  project:
    - "./tsconfig.json"
settings:
  import/parsers:
    "@typescript-eslint/parser":
      - ".ts"
      - ".tsx"
  import/resolver:
    typescript:
      alwaysTryTypes: true
  import/ignore:
    - \.(scss|less|css)$

extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
  - plugin:import/recommended
  - plugin:import/typescript
  - plugin:solid/typescript
plugins:
  - react

rules:
  "@typescript-eslint/indent":
    - error
    - 2
  "@typescript-eslint/member-delimiter-style":
    - error
    - multilineDetection: brackets
      multiline:
        delimiter: comma
        requireLast: true
      singleline:
        delimiter: comma
        requireLast: false
      overrides:
        interface:
          multiline:
            delimiter: none
          singleline:
            delimiter: comma
  "@typescript-eslint/no-unused-vars": error
  "@typescript-eslint/semi":
    - error
    - never
  "@typescript-eslint/space-infix-ops": error
  "@typescript-eslint/type-annotation-spacing": error
  "@typescript-eslint/restrict-plus-operands": off
  import/newline-after-import:
    - error
    - count: 2
  import/order:
    - error
    - pathGroups:
        - pattern: solid-js
          group: external
          position: before
      pathGroupsExcludedImportTypes:
        - react
      groups:
        - builtin
        - external
        - internal
        - parent
        - sibling
      newlines-between: always
      alphabetize:
        order: asc
        caseInsensitive: true
  import/no-cycle:
    - error
    - maxDepth: 10
      ignoreExternal: true
  import/no-useless-path-segments:
    - error
    - noUselessIndex: true
  import/no-anonymous-default-export: error
  import/no-duplicates: error
  import/no-namespace: error
  arrow-body-style: "off"
  comma-dangle:
    - error
    - always-multiline
  indent:
    - error
    - 2
    - SwitchCase: 1
  linebreak-style:
    - error
    - unix
  max-len:
    - warn
    - code: 120
  no-console:
    - error
    - allow:
        - warn
        - error
  no-duplicate-imports: error
  no-multiple-empty-lines:
    - error
    - max: 2
      maxEOF: 0
  no-use-before-define: error
  object-curly-spacing:
    - error
    - never
  operator-linebreak:
    - error
    - before
  quotes:
    - error
    - double
    - avoidEscape: true
  semi:
    - error
    - never
  react/jsx-tag-spacing:
    - error
    - closingSlash: never
      beforeSelfClosing: always
      afterOpening: never
      beforeClosing: allow
  react/jsx-closing-bracket-location:
    - error
    - nonEmpty: after-props
      selfClosing: after-props
  react/jsx-curly-spacing:
    - 2
    - when: never
      attributes:
        allowMultiline: false
      children: true
  react/jsx-first-prop-new-line:
    - error
    - multiline
  react/jsx-fragments:
    - error
    - syntax
  react/jsx-max-props-per-line:
    - error
    - maximum: 1
  react/jsx-sort-props:
    - error
    - callbacksLast: true
      shorthandFirst: true
      shorthandLast: false
      ignoreCase: true
      noSortAlphabetically: false
      reservedFirst: true
  react/jsx-wrap-multilines:
    - error
    - declaration: parens
      assignment: parens
      return: parens
      arrow: parens
      condition: ignore
      logical: ignore
      prop: ignore

